{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Usuario/OneDrive/Desktop/Big Data/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as rsa from 'my-rsa';\nimport * as bc from 'bigint-conversion';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let VotosService = /*#__PURE__*/(() => {\n  class VotosService {\n    constructor(http) {\n      this.http = http;\n      this.URI = \"http://localhost:4000\";\n      this.initialized = new Promise((resolve, reject) => {\n        this.init().then(() => {\n          resolve();\n        }).catch(() => {\n          reject();\n        });\n      });\n    }\n\n    init() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const keyPair = yield rsa.generateKeys();\n        _this.privateKey = keyPair.privateKey;\n        _this.publicKey = keyPair.publicKey; //Obtener las clave publica\n\n        const receivedPublicKey = yield firstValueFrom(_this.getPublicKey());\n        _this.serverPublicKey = jsonToPublicKey(receivedPublicKey);\n        console.log(_this.publicKey);\n        console.log(_this.privateKey);\n        console.log(_this.serverPublicKey);\n      })();\n    }\n\n    mensajeCifrado(mensaje, pubKey) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this2.initialized;\n        console.log(\"Service\");\n        console.log(mensaje);\n        const path = `${_this2.URI}/votos/encrypt`;\n        return _this2.http.post(path, {\n          message: mensaje,\n          pubKey: publicKeyToJson(pubKey)\n        });\n      })();\n    }\n\n    decrypt(mensaje) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this3.initialized;\n        console.log(\"Send encrypted. Wait decrypted\");\n        return yield firstValueFrom(_this3.http.post(_this3.URI + '/votos/decrypt', {\n          message: mensaje\n        }));\n      })();\n    }\n\n    sign(mensaje) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        console.log(\"Firma\");\n        return _this4.http.post(_this4.URI + '/votos/sign', {\n          message: mensaje\n        });\n      })();\n    }\n\n    firmaciega(mensaje) {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this5.initialized;\n        console.log(\"Firma ciega\");\n        return _this5.http.post(_this5.URI + '/votos/sign', {\n          message: mensaje\n        });\n      })();\n    }\n\n    verify(mensaje, pubKey) {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this6.initialized;\n        return _this6.http.post(_this6.URI + '/votos/verify', {\n          message: mensaje,\n          pubKey: publicKeyToJson(pubKey)\n        });\n      })();\n    }\n\n    getPublicKey() {\n      return this.http.get(this.URI + \"/votos/publickey\");\n    }\n\n  }\n\n  VotosService.ɵfac = function VotosService_Factory(t) {\n    return new (t || VotosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  VotosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VotosService,\n    factory: VotosService.ɵfac,\n    providedIn: 'root'\n  });\n  return VotosService;\n})();\n\nfunction publicKeyToJson(pubKey) {\n  return {\n    e: bc.bigintToHex(pubKey.e),\n    n: bc.bigintToHex(pubKey.e)\n  };\n}\n\nfunction jsonToPublicKey(pubKeyJson) {\n  return new rsa.PublicKey(bc.hexToBigint(pubKeyJson.e), bc.hexToBigint(pubKeyJson.n));\n}","map":null,"metadata":{},"sourceType":"module"}